// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  userId             Int             @id @default(autoincrement())
  fullName           String
  username           String          @unique
  avatar             String?
  email              String          @unique
  password           String
  phoneNumber        String          @unique
  location           String?
  searchHistoryOnOff Boolean         @default(true)
  notificationOnOff  Boolean         @default(true)
  notifications      Notification[]
  searchHistories    SearchHistory[]
  products           Product[]
  comments           Comment[]
  createdAt          DateTime        @default(now())
  updatedAt          DateTime        @updatedAt
}

model Notification {
  id        Int      @id @default(autoincrement())
  userId    Int
  title     String
  content   String
  read      Boolean  @default(false)
  user      User     @relation(fields: [userId], references: [userId])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model SearchHistory {
  id        Int      @id @default(autoincrement())
  userId    Int
  user      User     @relation(fields: [userId], references: [userId])
  word      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id        Int       @id @default(autoincrement())
  authorId  Int
  title     String
  price     Int
  picture   String[]
  content   String?
  hits      Int       @default(0)
  author    User      @relation(fields: [authorId], references: [userId])
  hashtags  Hashtag[]
  comments  Comment[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Hashtag {
  id        Int       @id @default(autoincrement())
  hashtag   String    @unique
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Comment {
  id        Int      @id @default(autoincrement())
  authorId  Int
  productId Int
  comment   String
  author    User     @relation(fields: [authorId], references: [userId])
  product   Product  @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
